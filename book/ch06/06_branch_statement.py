# 6.2) 분기문
# '소프트웨어'는 컴퓨터가 할 일의 '목록'이라고 표현할 수 있다.
# 프로그래머가 컴퓨터에게 할 일의 목록을 내주면, 컴퓨터는 소프트웨어에 기록된 목록을 보고 그대로 수행한다.
# 프로그래밍에서 '흐름(Flow)'이라고 하면 컴퓨터에서 내려지는 명령의 순서를 가리키는 말이다.
# 다음과 같이 소프트웨어 코드를 작성하면 컴퓨터는 1, 2, 3번의 작업을 순서대로 처리한다.

# 1) a에 사용자로부터 입력받은 수를 저장하라.
# 2) b에 3÷a의 결과를 저장하라.
# 3) a와 b를 출력하라.

# 만약 a가 가지면 안 되는 수, 예를 들어 0을 사용자로부터 입력받게 되면 오류를 일으키게 되는 버그가 하나 숨어있다.
# a에 0이 입력된 경우에 나눗셈을 실행하지 못하게 하면 버그를 고칠 수 있다.

# 1) a에 사용자로부터 입력받은 수를 저장하라.
# 2) a가 0이라면 프로그램을 종료하고, 그렇지 않으면 다음 명령을 수행하라.
# 3) b에 3÷a의 결과를 저장하라.
# 4) a와 b를 출력하라.

# 2번 명령의 "a가 0이라면 ~하고, 그렇지 않다면 ~하라" <<
# 원래의 코드는 명령이 한 방향으로 흐르지만, 저 문장을 통해서 흐름이 '두갈래'로 나뉘었다.
# 이처럼 프로그램의 흐름을 가르는 문장을 일컬어 나눌 분(分), 갈림길 기(岐), '분기문'이라고 한다.
